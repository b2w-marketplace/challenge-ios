//
//  HomeInteractor.swift
//  ALojinha
//
//  Created by Arlen Ricardo Pereira on 01/05/19.
//  Copyright (c) 2019 Arlen Ricardo Pereira. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeBusinessLogic
{
  func requestFetchBanners(request: HomeModel.BannerModel.Request)
  func requestCategories(request: HomeModel.CategoriesModel.Request)
  func requestBestSellers(request: HomeModel.BestSellersModel.Request)
}

protocol HomeDataStore {
    
    var product: [ProductAPIRequest]! { get set }
    var categories: [CategoryAPIRequest]! { get set }
}

class HomeInteractor: HomeBusinessLogic, HomeDataStore
{
    var product: [ProductAPIRequest]!
    var categories: [CategoryAPIRequest]!
    
  var presenter: HomePresentationLogic?
  var worker: HomeWorker?
  var productWorker = ProductWorker(productStore: ProductsRestAPI())
  
  // MARK: Functions
  func requestFetchBanners(request: HomeModel.BannerModel.Request)
  {
    productWorker.fetchBanners { (banners) -> Void in
        let response = HomeModel.BannerModel.Response(bannersResponse: banners)
        self.presenter?.presentBanners(response: response)
    }
  }

    func requestCategories(request: HomeModel.CategoriesModel.Request) {
        productWorker.fetchCategories { (categories) -> Void in
            self.categories = categories
            let response = HomeModel.CategoriesModel.Response(categoryResponse: categories)
            self.presenter?.presentCategories(response: response)
        }
    }
    
    func requestBestSellers(request: HomeModel.BestSellersModel.Request) {
        productWorker.fetchBestSellers { (bestSellers) -> Void in
            self.product = bestSellers
            let response = HomeModel.BestSellersModel.Response(bestSellersResponse: bestSellers)
            self.presenter?.presentBestSellers(response: response)
        }
    }
}

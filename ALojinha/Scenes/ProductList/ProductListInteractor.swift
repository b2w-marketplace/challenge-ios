//
//  ProductListInteractor.swift
//  ALojinha
//
//  Created by Arlen on 05/05/19.
//  Copyright (c) 2019 Arlen Ricardo Pereira. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ProductListBusinessLogic
{
  func requestProductList(request: ProductListModel.ProductsModel.Request)
  func requestCategory(request: ProductListModel.CategoryModel.Request)
}

protocol ProductListDataStore {
    
    var product: [ProductAPIRequest]! { get set }
    var category: [CategoryAPIRequest]! { get set }
}

class ProductListInteractor: ProductListBusinessLogic, ProductListDataStore
{
    var category: [CategoryAPIRequest]!
    var product: [ProductAPIRequest]!
    
  var presenter: ProductListPresentationLogic?
  var worker: ProductListWorker?
    var productWorker = ProductWorker(productStore: ProductsRestAPI())
  
  // MARK: Functions
  
  func requestProductList(request: ProductListModel.ProductsModel.Request)
  {
    productWorker.fetchProductList { (products) -> Void in
        self.product = products
        let response = ProductListModel.ProductsModel.Response(productsResponse: products)
        self.presenter?.presentProductList(response: response)
    }
  }
    
    func requestCategory(request: ProductListModel.CategoryModel.Request) {
        let response = ProductListModel.CategoryModel.Response(categoryResponse: category)
        presenter?.presentCategory(response: response)
    }
}

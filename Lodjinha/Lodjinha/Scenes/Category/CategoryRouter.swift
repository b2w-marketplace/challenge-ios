//
//  CategoryRouter.swift
//  Lodjinha
//
//  Created by Gilson Gil on 24/02/19.
//  Copyright (c) 2019 Gilson Gil. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CategoryRoutingLogic {
  func routeToProductDetail(with product: Product)
}

protocol CategoryDataPassing {
  var dataStore: CategoryDataStore? { get }
}

final class CategoryRouter: NSObject, CategoryRoutingLogic, CategoryDataPassing {
  weak var viewController: CategoryViewController?
  var dataStore: CategoryDataStore?

  func routeToProductDetail(with product: Product) {
    let viewController = ProductDetailsViewController()
    guard let categoryViewController = self.viewController,
      var destinationDataStore = viewController.router?.dataStore else { return }
    passDataToProductDetails(product: product, destination: &destinationDataStore)
    navigateToProductDetails(source: categoryViewController, destination: viewController)
  }

  // MARK: Navigation

  func navigateToProductDetails(source: CategoryViewController, destination: ProductDetailsViewController) {
    source.navigationController?.pushViewController(destination, animated: true)
  }

  // MARK: Passing data

  func passDataToProductDetails(product: Product, destination: inout ProductDetailsDataStore) {
    destination.product = product
  }
}

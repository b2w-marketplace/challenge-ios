//
//  ProductDetailsPresenter.swift
//  Lodjinha
//
//  Created by Gilson Gil on 25/02/19.
//  Copyright (c) 2019 Gilson Gil. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ProductDetailsPresentationLogic {
  func presentProductDetails(response: ProductDetails.DisplayProduct.Response)
  func presentTitle(response: ProductDetails.DisplayTitle.Response)
}

final class ProductDetailsPresenter: ProductDetailsPresentationLogic {
  weak var viewController: ProductDetailsDisplayLogic?

  func presentProductDetails(response: ProductDetails.DisplayProduct.Response) {
    let product = response.product
    let fromPrice = String(format: "%@%.2f", arguments: [String.Home.priceFrom, product.fromPrice])
    let toPrice = String(format: "%@%.2f", arguments: [String.Home.priceTo, product.toPrice])
    let displayedProduct = DisplayedProduct(imageUrl: product.imageUrl,
                                            name: product.name,
                                            fromPrice: fromPrice,
                                            toPrice: toPrice,
                                            description: product.description)
    let viewModel = ProductDetails.DisplayProduct.ViewModel(displayedProduct: displayedProduct)
    viewController?.displayProduct(viewModel: viewModel)
  }

  func presentTitle(response: ProductDetails.DisplayTitle.Response) {
    let product = response.product
    let title = product.category.description
    let viewModel = ProductDetails.DisplayTitle.ViewModel(title: title)
    viewController?.displayNavigationTitle(viewModel: viewModel)
  }
}

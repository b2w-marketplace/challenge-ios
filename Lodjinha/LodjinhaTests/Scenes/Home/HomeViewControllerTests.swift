//
//  HomeViewControllerTests.swift
//  Lodjinha
//
//  Created by Gilson Gil on 27/02/19.
//  Copyright (c) 2019 Gilson Gil. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Lodjinha

import SafariServices

import Quick
import Nimble

final class HomeViewControllerSpec: QuickSpec {
  override func spec() {
    let sut = HomeViewController()
    let navigationController = UINavigationController(rootViewController: sut)
    let window = UIWindow()
    window.rootViewController = navigationController
    window.makeKeyAndVisible()

    describe("given an home view controller") {
      context("when successfully loaded") {
        it("should display a banner cell at section 0") {
          let indexPath = IndexPath(row: 0, section: 0)
          expect(sut.homeView?.tableView.cellForRow(at: indexPath)).to(beAnInstanceOf(HomeBannerCell.self))
        }

        it("should display a categories cell at section 1") {
          let indexPath = IndexPath(row: 0, section: 1)
          expect(sut.homeView?.tableView.cellForRow(at: indexPath)).to(beAnInstanceOf(HomeCategoriesCell.self))
        }

        it("should display a product cell at section 2") {
          let indexPath = IndexPath(row: 0, section: 2)
          expect(sut.homeView?.tableView.cellForRow(at: indexPath)).to(beAnInstanceOf(ProductCell.self))
        }

        it("should open safari when tapped on a banner") {
          let indexPath = IndexPath(row: 0, section: 0)
          let cell = sut.homeView?.tableView.cellForRow(at: indexPath) as? HomeBannerCell
          cell?.delegate?.didTap(at: 0)
          expect(sut.presentedViewController).toEventually(beAnInstanceOf(SFSafariViewController.self))
          waitUntil { done in
            sut.dismiss(animated: false) {
              done()
            }
          }
        }

        it("should route to categories view controller when tapped on a category") {
          let indexPath = IndexPath(row: 0, section: 1)
          let cell = sut.homeView?.tableView.cellForRow(at: indexPath) as? HomeCategoriesCell
          cell?.delegate?.didTapCategory(at: 0)
          expect(sut.navigationController?.viewControllers.last)
            .toEventually(beAnInstanceOf(CategoryViewController.self))
          waitUntil { done in
            sut.navigationController?.popViewController(animated: false)
            done()
          }
        }

        it("should route to product details view controller when tapped on a bestseller") {
          let indexPath = IndexPath(row: 0, section: 2)
          sut.homeView?.tableView.delegate!.tableView!(sut.homeView!.tableView, didSelectRowAt: indexPath)
          expect(sut.navigationController?.viewControllers.last)
            .toEventually(beAnInstanceOf(ProductDetailsViewController.self))
        }
      }
    }
  }
}
